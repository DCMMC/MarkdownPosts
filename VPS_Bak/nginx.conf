user  www www;

worker_processes auto;

error_log  /home/wwwlogs/nginx_error.log  crit;

pid        /usr/local/nginx/logs/nginx.pid;

#Specifies the value for maximum file descriptors that can be opened by this process.
worker_rlimit_nofile 51200;

events
    {
        use epoll;
        worker_connections 51200;
        multi_accept on;
    }

http
{
        include       mime.types;
        default_type  application/octet-stream;

        server_names_hash_bucket_size 128;
        client_header_buffer_size 32k;
        large_client_header_buffers 4 32k;
        client_max_body_size 50m;

        sendfile   on;
        tcp_nopush on;

        keepalive_timeout 60;

        tcp_nodelay on;

        fastcgi_connect_timeout 1500;
        fastcgi_send_timeout 1500;
        fastcgi_read_timeout 1500;
        fastcgi_buffer_size 64k;
        fastcgi_buffers 4 64k;
        fastcgi_busy_buffers_size 128k;
        fastcgi_temp_file_write_size 256k;

        gzip on;
        gzip_min_length  1k;
        gzip_buffers     4 16k;
        gzip_http_version 1.1;
        gzip_comp_level 2;
        gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml application/xml+rss;
        gzip_vary on;
        gzip_proxied   expired no-cache no-store private auth;
        gzip_disable   "MSIE [1-6]\.";

        #limit_conn_zone $binary_remote_addr zone=perip:10m;
        ##If enable limit_conn_zone,add "limit_conn perip 10;" to server section.

        server_tokens off;
        #log format
        log_format  access  '$remote_addr - $remote_user [$time_local] "$request" '
             '$status $body_bytes_sent "$http_referer" '
             '"$http_user_agent" $http_x_forwarded_for';

		##################Default site######################
		server {
        	listen 80 default_server;
        	server_name www.dcmmcc.tk dcmmcc.tk;
        	rewrite ^ https://$server_name$request_uri? permanent;
		}

		server {
        	listen 443 ssl;
        	#listen [::]:80 default_server ipv6only=on;
        	server_name www.dcmmcc.tk dcmmcc.tk;

		root  /home/wwwroot/default;
        	index index.html index.htm index.php;

        	error_page   404   /404.html;
        	include enable-php.conf;

        	location /nginx_status
        	{	
            		stub_status on;
            		access_log   off;
        	}

        	location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
        	{
            	expires      30d;
        	}

        	location ~ .*\.(js|css)?$
        	{
        	    expires      12h;
        	}

        	location ~ /\.
        	{
            	deny all;
        	}

        	access_log  /home/wwwlogs/access.log  access;

        	# letsencrypt生成的文件
        	ssl_certificate /etc/letsencrypt/live/dcmmcc.tk/fullchain.pem;
        	ssl_certificate_key /etc/letsencrypt/live/dcmmcc.tk/privkey.pem;

        	ssl_session_timeout 1d;
        	ssl_session_cache shared:SSL:50m;
        	ssl_session_tickets on;

        	ssl_dhparam /etc/ssl/private/dhparam.pem;

        	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        	# 一般推荐使用的ssl_ciphers值: https://wiki.mozilla.org/Security/Server_Side_TLS
        	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128:AES256:AES:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK';
        	ssl_prefer_server_ciphers on;
        }

		##################rede's site######################
		server  {
        	listen 80;
        	server_name rede.dcmmcc.tk;
        	location / {
                proxy_pass http://127.0.0.1:8000;
            }
        }

		##################Blog site######################
		server {
        	listen 80;
        	server_name blog.dcmmcc.tk;
        	rewrite ^ https://$server_name$request_uri? permanent;
		}

		server
    	{
        	listen 443 ssl;
        	#listen [::]:80;
        	server_name blog.dcmmcc.tk;
        	index index.html index.htm index.php default.html default.htm default.php;
        	root  /home/wwwroot/blog;

        	include other.conf;
        	error_page   404   /404.html;

        	location / {
            		try_files $uri $uri/ /index.php$is_args$args;
            }

        	location ~ [^/]\.php(/|$)
       		{
            	# comment try_files $uri =404; to enable pathinfo
            	try_files $uri =404;
            	fastcgi_pass  unix:/tmp/php-cgi.sock;
            	fastcgi_index index.php;
            	include fastcgi.conf;
            	#include pathinfo.conf;
        	}

        	location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
        	{
            	expires      30d;
        	}

        	location ~ .*\.(js|css)?$
        	{
            	expires      12h;
        	}

        	access_log  /home/wwwlogs/blog.dcmmcc.tk.log  access;

			# letsencrypt生成的文件
			ssl_certificate /etc/letsencrypt/live/dcmmcc.tk/fullchain.pem;
			ssl_certificate_key /etc/letsencrypt/live/dcmmcc.tk/privkey.pem;

			ssl_session_timeout 1d;
			ssl_session_cache shared:SSL:50m;
			ssl_session_tickets on;

			ssl_dhparam /etc/ssl/private/dhparam.pem;

			ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
			# 一般推荐使用的ssl_ciphers值: https://wiki.mozilla.org/Security/Server_Side_TLS
			ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128:AES256:AES:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK';
			ssl_prefer_server_ciphers on;
    	}

		##################Search site######################
		server {
        	listen 80;
        	server_name search.dcmmcc.tk;
        	rewrite ^ https://$server_name$request_uri? permanent;
		}

		server
    	{
        	listen 443 ssl;
        	#listen [::]:80;
        	server_name search.dcmmcc.tk;

			location / {
    proxy_redirect off;
    proxy_pass https://www.google.com;
    proxy_connect_timeout 60s;
    proxy_read_timeout 5400s;
    proxy_send_timeout 5400s;

    proxy_set_header Host "www.google.com";
    proxy_set_header User-Agent $http_user_agent;
    proxy_set_header Referer https://www.google.com;
    proxy_set_header Accept-Encoding "";
    proxy_set_header X-Real-IP $remote_addr; 
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
    proxy_set_header X-Forwarded-Proto https;
        
    # subs_filter https://www.google.com.hk search.dcmmcc.tk;
    # subs_filter https://www.google.com search.dcmmcc.tk;
    # subs_filter_types text/css text/xml text/javascript;

    # sub_filter_once off; 

        		# proxy_pass https://www.google.com;
        		# proxy_connect_timeout 120;
        		# proxy_read_timeout 600;
        		# proxy_send_timeout 600;

        		# send_timeout 600;
        		# proxy_redirect    off;
        		# proxy_set_header X-Real-IP $remote_addr;
            		# proxy_set_header Host $host;

        		# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			

			}
      
			# 防止网络爬虫
    			#forbid spider
    			if ($http_user_agent ~* "qihoobot|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot") 
    			{ 
        			return 403; 
    			}

   			 # 禁止用其他域名或直接用IP访问，只允许指定的域名
    			#forbid illegal domain
    			if ( $host != "search.dcmmcc.tk" ) {
        			return 403; 
    			}

    			access_log  off;
    			error_log   on;
    			error_log  /var/log/nginx/search.dcmmcc.tk-error.log;
		
			# letsencrypt生成的文件
			ssl_certificate /etc/letsencrypt/live/dcmmcc.tk/fullchain.pem;
			ssl_certificate_key /etc/letsencrypt/live/dcmmcc.tk/privkey.pem;

			ssl_session_timeout 1d;
			ssl_session_cache shared:SSL:50m;
			ssl_session_tickets on;

			ssl_dhparam /etc/ssl/private/dhparam.pem;

			ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
			# 一般推荐使用的ssl_ciphers值: https://wiki.mozilla.org/Security/Server_Side_TLS
			ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128:AES256:AES:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK';
			ssl_prefer_server_ciphers on;
    	}
        
	#include vhost/*.conf;
}

